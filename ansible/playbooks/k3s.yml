---
- name: Bootstrap K3S Cluster With KupeVIP, MetalIB And EtCD
  hosts: manager_nodes
  become: yes

  tasks:
    - name: Update Apt Cache Repository
      apt: update_cache=yes cache_valid_time=3600

    - name: Ensure Packages Are Installed
      apt: pkg={{ item }} state=present
      loop: [ "curl", "jq" ]

    - name: Setup Static IP Address For Master Node
      lineinfile: dest=/etc/dhcpcd.conf regexp="^interface eth0$" insertafter="^interface eth0$" line="static ip_address={% raw %}{{ ip }}/{{ netmask}}{% endraw %} {% raw %}{{ gateway }}"{% endraw %} backup=no

    - name: Configure Kubernetes Cluster IP Range In SystemD Environment File
      copy: src=templates/kubeadm-flags.env.j2 dest="/etc/systemd/system/kubelet.service.env" owner=root group=root mode=0644

    - name: Reload System Daemon To Reflect Changes Made To The Configuration Files
      command: sudo systemctl daemon-reload

    - name: Enable And Start Docker Services On All Nodes
      systemd: name=docker enabled=true state=started

    - name: Initialize Master Node Using Kubeadm Command
      shell: |
        curl -sfL https://get.k3s.io | \
          sh -s - server --cluster-init \
            --node-name {{ inventory_hostname }} \
            --token {{ token }} \
            --write-kubeconfig-mode 644 \
            --tls-san {{ api_server_loadbalancer_endpoint }} \
            --disable traefik \
            --datastore endpoint='' provider=etcd disable-apiserver-availability-check=false

    - name: Wait Until Master Is Initialized Before Proceeding Further
      wait_for: path=/var/lib/rancher/k3s/server/manifests/traefik-crd.yaml delay=10 timeout=120

    - name: Joining Workers Or Managers Into Existing Cluster
      when: join is defined
      shell: |
        curl -sfL https://get.k3s.io | \
          sh -s - agent \
            --url 'https://{{ controlplane_host }}:6443' \
            --token {{ token }} \
            --node-name {{ inventory_hostname }} \
            {% if role == 'manager' %}--server{% else %}--worker{% endif %}

    - name: Deploy MetalLB LoadBalancing Solution
      template: src=files/metallb.yml.j2 dest=/tmp/metallb.yml
      notify: Apply MetallB Configurations

    - meta: flush_handlers

    handlers:
      - name: Apply MetalLB Configurations
        k8s: definition="{{ lookup('template', '/tmp/metallb.yml') }}"

    - name: Verifying Successful Deployment Of MetalLB Components
      shell: >
        kubectl get pods -n metallb-system -owide|grep Running|wc -l && echo "" || exit 1
      register: result
      until: result.stdout != ''
      retries: 10
      delay: 10

    - name: Adding Firewall Rules To Allow Traffic Between Nodes
      ufw: rule=allow proto=tcp port={{ item }} comment="Allow TCP Port {{ item }}"
      loop: [ 6443, 10250, 10251, 10252, 10255 ]
