---
- hosts: '*'
  gather_facts: false

  tasks:
    - name: Gather Facts
      setup:

- hosts: all
  gather_facts: false

  vars:
    ssh_key_filename: id_rsa
    remote_machine_username: ansibleuser
    remote_machine_password: bulletx2

  tasks:
    - name: check .ssh local directory exists
      stat:
        path: "~/.ssh"
      register: ssh_directory_exists_check

    - name: Check needed OS tools exist
      shell: which sshpass ssh-keygen ssh-copy-id
      register: os_tools_exist
      ignore_errors: true

    - name: Install required packages on Ubuntu
      become: true
      apt:
        name:
          - sshpass
          - openssh-client
        state: present
      when: ansible_distribution == 'Ubuntu'

    - name: create ~/.ssh local directory
      file:
        path: "~/.ssh"
        state: directory
        mode: "0700"
      register: ssh_directory_creation
      when: ssh_directory_exists_check.stat.exists == false

    - name: generate ssh key on local machine
      shell: "ssh-keygen -t rsa -f ~/.ssh/{{ ssh_key_filename }} -P ''"
      register: ssh_key_creation
      failed_when: ssh_key_creation.rc != 0
      when: ssh_directory_creation.changed

    - name: check .ssh/config file exists
      stat:
        path: "~/.ssh/config"
      register: ssh_config_file_exists_check

    - name: create the ~/.ssh/config file
      file:
        path: "~/.ssh/config"
        state: touch
        mode: "0644"
      register: ssh_config_file_creation
      when: ssh_config_file_exists_check.stat.exists == false

    - name: add the new ssh key to the ~/.ssh/config file
      lineinfile:
        path: "~/.ssh/config"
        line: "IdentityFile ~/.ssh/{{ ssh_key_filename }}"
        state: present
        regexp: "^\\s*IdentityFile\\s+.ssh/{{ ssh_key_filename }}$"
        backup: yes
      register: ssh_config_file_key_addition

    - name: distribute the ssh key to the remote hosts
      shell: "ssh-copy-id -o StrictHostKeyChecking=no -i ~/.ssh/{{ ssh_key_filename }}.pub '{{ remote_machine_username }}@{{ inventory_hostname }}'"
      register: ssh_copy_id_execution
      failed_when: ssh_copy_id_execution.rc != 0

    - name: check ssh to remote hosts works
      shell: "hostname; id"
      register: ssh_connection_test
      failed_when: ssh_connection_test.rc != 0

    - name: print the connectivity test results
      debug:
        var: ssh_connection_test.stdout_lines
