- hosts: all
  become: yes
  remote_user: ansibleuser
  tasks:
  - name: Update apt and install necessary packages
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - gnupg2

  - name: Disable swap
    command: swapoff -a
    become: yes

  - name: Remove swap entry from /etc/fstab
    lineinfile:
      path: /etc/fstab
      regexp: '.*swap.*'
      state: absent
    become: yes

  - name: Add Kubernetes GPG key
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Add Kubernetes APT repository
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present

  - name: Install Kubernetes
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - kubelet
      - kubeadm
      - kubectl

  - name: Install containerd
    apt:
      name: containerd
      state: present
      update_cache: yes
    become: yes

  - name: Check containerd service status
    command: systemctl is-active containerd
    register: containerd_service_status
    failed_when: containerd_service_status.stdout != 'active'
    become: yes

  - name: Report containerd service status
    debug:
     msg: "Containerd service is running on {{ inventory_hostname }}"
    when: containerd_service_status.stdout == 'active'

  - name: Reload systemd daemon
    systemd:
      daemon_reload: yes
    become: yes

  - name: Initialize Kubernetes on Master1
    shell: kubeadm init --pod-network-cidr=10.244.0.0/16 --control-plane-endpoint "192.168.0.9:6443" --token-ttl 0 --cri-socket unix:///run/containerd/containerd.sock

    register: init
    when: inventory_hostname == 'hp'

  - name: Capture join command
    set_fact:
      join_command: "{{ init.stdout_lines[-1] }}"
    when: inventory_hostname == 'hp'

  - name: Initialize Kubernetes on Master2
    command: "{{ join_command }}"
    when: inventory_hostname == 'x3650'

  - name: Join Worker nodes to cluster
    command: "{{ join_command }}"
    when: "'workers' in group_names"

  - name: Install and configure Kube-Vip
    command: kubectl apply -f /home/David/HomeLab/Ansible/playbooks/kube-vip-{{ 'masters' if 'masters' in group_names else inventory_hostname }}.yaml

- hosts: masters
  become: yes
  tasks:
  - name: Copy kubeconfig to ansibleruser's home directory
    copy:
      src: /etc/kubernetes/admin.conf
      dest: /home/ansibleruser/.kube/config
      owner: ansibleruser
      group: ansibleruser
      mode: '0644'

  - name: Copy kubeconfig to david's home directory
    copy:
      src: /etc/kubernetes/admin.conf
      dest: /home/david/.kube/config
      owner: david
      group: david
      mode: '0644'

  - name: Install Calico network plugin
    command: kubectl apply -f https://docs.projectcalico.org/v3.11/manifests/calico.yaml

  - name: Untaint master nodes to schedule deployments
    command: kubectl taint nodes --all node-role.kubernetes.io/master-

- hosts: x3650
  become: yes
  tasks:
  - name: Verify nodes have joined the cluster
    command: kubectl get nodes
    register: nodes

