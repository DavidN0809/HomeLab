---
- name: Setup k3s cluster with kube-vip and MetalLB
  hosts: k3s_cluster
  become: true
  vars:
    vip_ip: 192.168.68.79
    master01_ip: 192.168.68.80
    interface_name: enp6s18
    metallb_address_pool: 192.168.68.80-192.168.68.85

  tasks:
    - block:
      - name: Install k3sup on the first master node
        ansible.builtin.shell: |
          curl -sLS https://get.k3sup.dev | sudo install /dev/stdin /usr/local/bin/k3sup
        delegate_to: "{{ groups['master'][0] }}"
        run_once: true

      - name: Initialize the cluster on the first master node
        ansible.builtin.shell: |
          k3sup install --ip {{ master01_ip }} \
          --user ubuntu \
          --sudo \
          --tls-san {{ vip_ip }} \
          --cluster --local-path ~/.kube/config \
          --context k8s-cluster-ha \
          --k3s-extra-args "--disable servicelb --node-ip={{ master01_ip }}"
        delegate_to: "{{ groups['master'][0] }}"
        run_once: true

      - name: Apply RBAC for kube-vip
        ansible.builtin.shell: kubectl apply -f https://kube-vip.io/manifests/rbac.yaml
        delegate_to: "{{ groups['master'][0] }}"
        run_once: true

      - name: Pull the kube-vip image on the first master node
        ansible.builtin.shell: ctr image pull ghcr.io/kube-vip/kube-vip:latest
        delegate_to: "{{ groups['master'][0] }}"
        run_once: true

      - name: Create kube-vip manifest
        ansible.builtin.shell: |
          alias kube-vip="ctr run --rm --net-host ghcr.io/kube-vip/kube-vip:latest vip /kube-vip"
          kube-vip manifest daemonset \
          --arp \
          --interface {{ interface_name }} \
          --address {{ vip_ip }} \
          --controlplane \
          --leaderElection \
          --taint \
          --inCluster | tee /var/lib/rancher/k3s/server/manifests/kube-vip.yaml
        delegate_to: "{{ groups['master'][0] }}"
        run_once: true
      when: inventory_hostname in groups['master']

    - block:
      - name: Join additional master nodes to the cluster
        ansible.builtin.shell: |
          k3sup join --ip {{ ansible_host }} \
          --user ubuntu --sudo --server --server-ip {{ master01_ip }} \
          --server-user ubuntu \
          --k3s-extra-args "--disable servicelb --node-ip={{ ansible_host }}"
        when: inventory_hostname != groups['master'][0]
      - name: Join worker nodes to the cluster
        ansible.builtin.shell: |
          k3sup join --ip {{ ansible_host }} --user ubuntu --sudo --server-ip {{ master01_ip }} \
          --k3s-channel stable \
          --server-user ubuntu \
          --k3s-extra-args " --disable servicelb"
      when: inventory_hostname in groups['worker']

    - block:
      - name: Install MetalLB on the first master node
        ansible.builtin.shell: |
          kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.14.3/manifests/namespace.yaml
          kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.14.3/manifests/metallb.yaml
        delegate_to: "{{ groups['master'][0] }}"
        run_once: true

      - name: Apply MetalLB configuration
        ansible.builtin.copy:
          dest: /home/ubuntu/config.yml
          content: |
            apiVersion: v1
            kind: ConfigMap
            metadata:
              namespace: metallb-system
              name: config
            data:
              config: |
                address-pools:
                - name: default
                  protocol: layer2
                  addresses:
                  - {{ metallb_address_pool }}
        delegate_to: "{{ groups['master'][0] }}"
        run_once: true

      - name: Deploy MetalLB configuration
        ansible.builtin.shell: kubectl apply -f /home/ubuntu/config.yml
        delegate_to: "{{ groups['master'][0] }}"
        run_once: true
      when: inventory_hostname in groups['master']
